{"version":3,"sources":["config.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/createSuper.js","../node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","store/actions/channelsList.js","store/actions/channels.js","components/group-list/group-list.js","components/group-list/index.js","components/channels-list/channels-list.js","components/channels-list/index.js"],"names":["APP_CONFIG","baseUrl","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","_typeof","obj","Symbol","iterator","constructor","_possibleConstructorReturn","self","call","ReferenceError","_createSuper","Derived","hasNativeReflectConstruct","Reflect","construct","sham","Proxy","Date","toString","e","result","Super","NewTarget","this","arguments","apply","_setPrototypeOf","p","_inherits","subClass","superClass","create","value","channelsListFetchData","thid","dispatch","fetch","then","response","ok","Error","statusText","json","channels","type","CHANNELS_LIST_FETCH_DATA_SUCCESS","payload","channelsListFetchDataSuccess","channelsFetchData","CHANNELS_FETCH_DATA_SUCCESS","channelsFetchDataSuccess","GroupList","listOfChannels","channelList","fetchData","loading","className","map","item","index","to","onClick","name","Component","connect","state","channelTopics","url","ChannelsList","match","params","src","logo","alt","title","xvid","channelsList"],"mappings":"yGAIeA,IAJI,CACfC,QAAS,yB,gCCDE,SAASC,EAAgBC,EAAUC,GAChD,KAAMD,aAAoBC,GACxB,MAAM,IAAIC,UAAU,qCAFxB,mC,gCCAA,SAASC,EAAkBC,EAAQC,GACjC,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CACrC,IAAIE,EAAaH,EAAMC,GACvBE,EAAWC,WAAaD,EAAWC,aAAc,EACjDD,EAAWE,cAAe,EACtB,UAAWF,IAAYA,EAAWG,UAAW,GACjDC,OAAOC,eAAeT,EAAQI,EAAWM,IAAKN,IAInC,SAASO,EAAad,EAAae,EAAYC,GAG5D,OAFID,GAAYb,EAAkBF,EAAYiB,UAAWF,GACrDC,GAAad,EAAkBF,EAAagB,GACzChB,EAbT,mC,gCCAe,SAASkB,EAAgBC,GAItC,OAHAD,EAAkBP,OAAOS,eAAiBT,OAAOU,eAAiB,SAAyBF,GACzF,OAAOA,EAAEG,WAAaX,OAAOU,eAAeF,KAEvBA,GCJV,SAASI,EAAQC,GAa9B,OATED,EADoB,oBAAXE,QAAoD,kBAApBA,OAAOC,SACtC,SAAiBF,GACzB,cAAcA,GAGN,SAAiBA,GACzB,OAAOA,GAAyB,oBAAXC,QAAyBD,EAAIG,cAAgBF,QAAUD,IAAQC,OAAOR,UAAY,gBAAkBO,IAI9GA,GCXF,SAASI,EAA2BC,EAAMC,GACvD,OAAIA,GAA2B,WAAlBP,EAAQO,IAAsC,oBAATA,ECHrC,SAAgCD,GAC7C,QAAa,IAATA,EACF,MAAM,IAAIE,eAAe,6DAG3B,OAAOF,EDEA,CAAsBA,GAHpBC,EEDI,SAASE,EAAaC,GACnC,IAAIC,ECJS,WACb,GAAuB,qBAAZC,UAA4BA,QAAQC,UAAW,OAAO,EACjE,GAAID,QAAQC,UAAUC,KAAM,OAAO,EACnC,GAAqB,oBAAVC,MAAsB,OAAO,EAExC,IAEE,OADAC,KAAKtB,UAAUuB,SAASV,KAAKK,QAAQC,UAAUG,KAAM,IAAI,iBAClD,EACP,MAAOE,GACP,OAAO,GDLuB,GAChC,OAAO,WACL,IACIC,EADAC,EAAQ,EAAeV,GAG3B,GAAIC,EAA2B,CAC7B,IAAIU,EAAY,EAAeC,MAAMlB,YACrCe,EAASP,QAAQC,UAAUO,EAAOG,UAAWF,QAE7CF,EAASC,EAAMI,MAAMF,KAAMC,WAG7B,OAAO,EAA0BD,KAAMH,I,mEEhB5B,SAASM,EAAgB7B,EAAG8B,GAMzC,OALAD,EAAkBrC,OAAOS,gBAAkB,SAAyBD,EAAG8B,GAErE,OADA9B,EAAEG,UAAY2B,EACP9B,IAGcA,EAAG8B,GCLb,SAASC,EAAUC,EAAUC,GAC1C,GAA0B,oBAAfA,GAA4C,OAAfA,EACtC,MAAM,IAAInD,UAAU,sDAGtBkD,EAASlC,UAAYN,OAAO0C,OAAOD,GAAcA,EAAWnC,UAAW,CACrEU,YAAa,CACX2B,MAAOH,EACPzC,UAAU,EACVD,cAAc,KAGd2C,GAAY,EAAeD,EAAUC,G,mECb3C,sDAUO,SAASG,EAAsBC,GAClC,OAAO,SAACC,GACJC,MAAM,GAAD,OAAI9D,IAAWC,QAAf,0CAAwD2D,IACxDG,MAAK,SAAAC,GACF,IAAIA,EAASC,GAAI,MAAM,IAAIC,MAAMF,EAASG,YAE1C,OAAOH,KAEVD,MAAK,SAAAC,GAAQ,OAAIA,EAASI,UAC1BL,MAAK,SAAAM,GAAQ,OAAIR,EAhBvB,SAAsCQ,GACzC,MAAO,CACHC,KAAMC,IACNC,QAASH,GAasBI,CAA6BJ,U,+HCT7D,SAASK,IACZ,OAAO,SAACb,GACJC,MAAM,GAAD,OAAI9D,IAAWC,QAAf,uBACA8D,MAAK,SAAAC,GACF,IAAIA,EAASC,GAAI,MAAM,IAAIC,MAAMF,EAASG,YAE1C,OAAOH,KAEVD,MAAK,SAAAC,GAAQ,OAAIA,EAASI,UAC1BL,MAAK,SAAAM,GAAQ,OAAIR,EAhBvB,SAAkCQ,GACrC,MAAO,CACHC,KAAMK,IACNH,QAASH,GAasBO,CAAyBP,Q,2CCX1DQ,E,4MAIFC,eAAiB,SAAClB,GACd,EAAKpD,MAAMuE,YAAYnB,I,uDAJ3B,WACIX,KAAKzC,MAAMwE,c,oBAKf,WAAU,IAAD,SACuB/B,KAAKzC,MAA1B6D,EADF,EACEA,SAAUY,EADZ,EACYA,QACjB,OACI,qBAAKC,UAAU,eAAf,SACI,sBAAKA,UAAU,qBAAf,UACI,qGACA,qBAAKA,UAAU,uBAAf,SACI,6BAEQD,EAAU,cAAC,IAAD,IACVZ,EAASc,KAAI,SAACC,EAAMC,GAChB,OAAO,6BACH,cAAC,IAAD,CAASC,GAAI,IAAMF,EAAKxB,KAAM2B,QAAS,kBAAM,EAAKT,eAAeM,EAAKxB,OAAtE,SAA8EwB,EAAKI,QADvEH,mB,GAlB5BI,aA6CTC,eAdS,SAAAC,GACpB,MAAO,CACHtB,SAAUsB,EAAMC,cAAcb,YAC9BE,QAASU,EAAMC,cAAcX,YAIV,SAAApB,GACvB,MAAO,CACHmB,UAAW,SAAAa,GAAG,OAAIhC,EAASa,MAC3BK,YAAa,SAAAnB,GAAI,OAAIC,EAASF,YAAsBC,QAI7C8B,CAA6Cb,GCpD7CA,a,sKCQTiB,E,uKACF,WACI7C,KAAKzC,MAAMwE,UAAU/B,KAAKzC,MAAMuF,MAAMC,OAAOpC,Q,oBAEjD,WAAU,IAAD,SACuBX,KAAKzC,MAA1B6D,EADF,EACEA,SAAUY,EADZ,EACYA,QACjB,OACI,qCACI,cAAC,UAAD,IACA,qBAAKC,UAAU,oBAAf,SACI,sBAAKA,UAAU,gBAAf,UACI,kKACA,qBAAKA,UAAU,qBAAf,SACI,6BAEQD,EAAU,cAAC,IAAD,IACVZ,EAASc,KAAI,SAACC,EAAMC,GAChB,OAAO,+BACH,qBAAKY,IAAKjG,IAAWC,QAAUmF,EAAKc,KAAMC,IAAKf,EAAKgB,QACpD,cAAC,IAAD,CAAMd,GAAI,IAAM,EAAK9E,MAAMuF,MAAMC,OAAOpC,KAAO,IAAMwB,EAAKiB,KAA1D,SAAiEjB,EAAKgB,UAF1Df,sB,GAjB7BI,aA6CZC,eAbS,SAAAC,GACpB,MAAO,CACHtB,SAAUsB,EAAMW,aAAavB,YAC7BE,QAASU,EAAMW,aAAarB,YAIT,SAAApB,GACvB,MAAO,CACHmB,UAAW,SAAAa,GAAG,OAAIhC,EAASF,YAAsBkC,QAI1CH,CAA6CI,GCrD7CA","file":"static/js/3.14e36251.chunk.js","sourcesContent":["const APP_CONFIG = {\r\n    baseUrl: 'https://epg.domru.ru'\r\n}\r\n\r\nexport default APP_CONFIG;","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport isNativeReflectConstruct from \"@babel/runtime/helpers/esm/isNativeReflectConstruct\";\nimport possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return possibleConstructorReturn(this, result);\n  };\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"@babel/runtime/helpers/esm/setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","import {CHANNELS_LIST_FETCH_DATA_SUCCESS} from './action-types';\r\nimport APP_CONFIG from '../../config';\r\n\r\nexport function channelsListFetchDataSuccess(channels) {\r\n    return {\r\n        type: CHANNELS_LIST_FETCH_DATA_SUCCESS,\r\n        payload: channels\r\n    }\r\n}\r\n\r\nexport function channelsListFetchData(thid) {\r\n    return (dispatch) => {\r\n        fetch(`${APP_CONFIG.baseUrl}/channel/list?domain=perm&thid=${thid}`)\r\n            .then(response => {\r\n                if(!response.ok) throw new Error(response.statusText)\r\n\r\n                return response;\r\n            })\r\n            .then(response => response.json())\r\n            .then(channels => dispatch(channelsListFetchDataSuccess(channels)))\r\n    }\r\n}","import {CHANNELS_FETCH_DATA_SUCCESS} from './action-types';\r\nimport APP_CONFIG from '../../config';\r\n\r\nexport function channelsFetchDataSuccess(channels) {\r\n    return {\r\n        type: CHANNELS_FETCH_DATA_SUCCESS,\r\n        payload: channels\r\n    }\r\n}\r\n\r\nexport function channelsFetchData() {\r\n    return (dispatch) => {\r\n        fetch(`${APP_CONFIG.baseUrl}/channeltheme/list`)\r\n            .then(response => {\r\n                if(!response.ok) throw new Error(response.statusText)\r\n\r\n                return response;\r\n            })\r\n            .then(response => response.json())\r\n            .then(channels => dispatch(channelsFetchDataSuccess(channels)))\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { channelsFetchData } from '../../store/actions/channels';\r\nimport { channelsListFetchData } from '../../store/actions/channelsList';\r\nimport {NavLink} from 'react-router-dom';\r\nimport Spinner from '../spinner';\r\nimport './group-list.css';\r\n\r\nclass GroupList extends Component {\r\n    componentDidMount() {\r\n        this.props.fetchData()\r\n    }\r\n    listOfChannels = (thid) => {\r\n        this.props.channelList(thid);\r\n    }\r\n    render() {\r\n        const {channels, loading} = this.props;\r\n        return (\r\n            <div className=\"channel-list\">\r\n                <div className=\"channel-list-group\">\r\n                    <h2>Темы каналов</h2>\r\n                    <div className=\"channel-list__slider\">\r\n                        <ul>\r\n                            {\r\n                                loading ? <Spinner /> :\r\n                                channels.map((item, index) => {\r\n                                    return <li key={index}>\r\n                                        <NavLink to={\"/\" + item.thid} onClick={() => this.listOfChannels(item.thid)}>{item.name}</NavLink>\r\n                                    </li>\r\n                                })\r\n                            }\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        channels: state.channelTopics.channelList,\r\n        loading: state.channelTopics.loading,\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        fetchData: url => dispatch(channelsFetchData(url)),\r\n        channelList: thid => dispatch(channelsListFetchData(thid))\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GroupList);","import GroupList from './group-list';\r\nexport default GroupList;","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { channelsListFetchData } from '../../store/actions/channelsList';\r\nimport GroupList from '../group-list';\r\nimport Spinner from '../spinner';\r\nimport {Link} from 'react-router-dom';\r\nimport APP_CONFIG from '../../config';\r\nimport './channels-list.css';\r\n\r\nclass ChannelsList extends Component {\r\n    componentDidMount() {\r\n        this.props.fetchData(this.props.match.params.thid);\r\n    }\r\n    render() {\r\n        const {channels, loading} = this.props;\r\n        return (\r\n            <>\r\n                <GroupList />\r\n                <div className=\"view-all-channels\">\r\n                    <div className=\"view-channels\">\r\n                        <h2>Список всех телеканалов</h2>\r\n                        <div className=\"list-channels-item\">\r\n                            <ul>\r\n                                {\r\n                                    loading ? <Spinner /> :\r\n                                    channels.map((item, index) => {\r\n                                        return <li key={index}>\r\n                                            <img src={APP_CONFIG.baseUrl + item.logo} alt={item.title} />\r\n                                            <Link to={'/' + this.props.match.params.thid + '/' + item.xvid}>{item.title}</Link>\r\n                                        </li>\r\n                                    })\r\n                                }\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        channels: state.channelsList.channelList,\r\n        loading: state.channelsList.loading\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        fetchData: url => dispatch(channelsListFetchData(url))\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ChannelsList);","import ChannelsList from './channels-list';\r\nexport default ChannelsList;"],"sourceRoot":""}