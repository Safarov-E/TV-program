{"version":3,"sources":["store/actions/action-types.js","components/Spinner/spinner.js","components/Spinner/index.js","components/app/app.js","components/app/index.js","store/reducers/channelTopicsReducer.js","store/reducers/channelsList.js","store/reducers/channelListItem.js","store/reducers/rootReducer.js","index.js"],"names":["CHANNELS_LIST_ITEM_FETCH_DATA_SUCCESS","CHANNELS_FETCH_DATA_SUCCESS","CHANNELS_LIST_FETCH_DATA_SUCCESS","Spinner","className","Component","ChannelTopics","lazy","ChannelsList","ChannelListItem","App","fallback","style","width","margin","path","exact","component","initialState","channelList","loading","channelListItem","rootReducer","combineReducers","channelTopics","state","action","type","payload","channelsList","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"uGAAA,sGAAO,IAAMA,EAAwC,wCACxCC,EAA8B,8BAC9BC,EAAmC,oC,0FCC3BC,E,4JACjB,WACI,OACI,qBAAKC,UAAU,uCAAf,SAAsD,qBAAKA,UAAU,kBAAf,SACtD,gCAAK,wBAAW,wBAAW,mC,GAJFC,aCFtBF,O,2KCITG,EAAgBC,gBAAK,kBAAM,gCAC3BC,EAAeD,gBAAK,kBAAM,gCAC1BE,EAAkBF,gBAAK,kBAAM,gCCNpBG,E,4JDSX,WACI,OACI,eAAC,IAAD,WACI,eAAC,WAAD,CAAUC,SAAU,qBAAKC,MAAO,CAACC,MAAO,SAAUC,OAAQ,aAAtC,SAAoD,cAACX,EAAA,EAAD,MAAxE,UACI,cAAC,IAAD,CAAOY,KAAK,IAAIC,OAAK,EAACC,UAAWX,IACjC,cAAC,IAAD,CAAOS,KAAK,SAASC,OAAK,EAACC,UAAWT,IACtC,cAAC,IAAD,CAAOO,KAAK,eAAeC,OAAK,EAACC,UAAWR,OAEhD,cAAC,IAAD,CAAOQ,UAAW,kBAAM,0D,GATtBZ,a,sCEPZa,EAAe,CACjBC,YAAa,GACbC,SAAS,GCFb,IAAMF,EAAe,CACjBC,YAAa,GACbC,SAAS,GCFb,IAAMF,EAAe,CACjBG,gBAAiB,GACjBD,SAAS,GCCb,IAMeE,EANKC,YAAgB,CAChCC,cHCW,WAA8D,IAA/BC,EAA8B,uDAAtBP,EAAcQ,EAAQ,uCACxE,OAAOA,EAAOC,MACV,KAAK1B,IACD,OAAO,2BAAIwB,GAAX,IAAkBN,YAAaO,EAAOE,QAASR,SAAS,IAC5D,QACI,OAAOK,IGLfI,aFAW,WAA4D,IAA/BJ,EAA8B,uDAAtBP,EAAcQ,EAAQ,uCACtE,OAAOA,EAAOC,MACV,KAAKzB,IACD,OAAO,2BAAIuB,GAAX,IAAkBN,YAAaO,EAAOE,QAASR,SAAS,IAC5D,QACI,OAAOK,IEJfJ,gBDDW,WAAgE,IAA/BI,EAA8B,uDAAtBP,EAAcQ,EAAQ,uCAC1E,OAAOA,EAAOC,MACV,KAAK3B,IACD,OAAO,2BAAIyB,GAAX,IAAkBJ,gBAAiBK,EAAOE,QAASR,SAAS,IAChE,QACI,OAAOK,M,QEHbK,EAAQC,YAAYT,EAAaU,YAAgBC,MAEvDC,IAASC,OACP,cAAC,IAAD,UACE,cAAC,IAAD,CAAUL,MAAOA,EAAjB,SACE,cAAC,EAAD,QAEcM,SAASC,eAAe,W","file":"static/js/main.65b46c23.chunk.js","sourcesContent":["export const CHANNELS_LIST_ITEM_FETCH_DATA_SUCCESS = \"CHANNELS_LIST_ITEM_FETCH_DATA_SUCCESS\";\r\nexport const CHANNELS_FETCH_DATA_SUCCESS = \"CHANNELS_FETCH_DATA_SUCCESS\";\r\nexport const CHANNELS_LIST_FETCH_DATA_SUCCESS = \"CHANNELS_LIST_FETCH_DATA_SUCCESS\";","import React, {Component} from 'react';\r\nimport './spinner.css';\r\n\r\nexport default class Spinner extends Component {\r\n    render() {\r\n        return(\r\n            <div className=\"loadingio-spinner-reload-jdh6h6pxv7b\"><div className=\"ldio-kyxh58dm96\">\r\n            <div><div></div><div></div><div></div></div>\r\n            </div></div>\r\n        )\r\n    }\r\n}","import Spinner from './spinner';\r\nexport default Spinner;","import React, {Component, lazy, Suspense} from 'react';\r\nimport {Route, Switch} from 'react-router-dom';\r\nimport Spinner from '../Spinner';\r\nimport './app.css';\r\n\r\nconst ChannelTopics = lazy(() => import('../channel-topics'));\r\nconst ChannelsList = lazy(() => import('../channels-list'));\r\nconst ChannelListItem = lazy(() => import('../channel-list-item'));\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n            <Switch>\r\n                <Suspense fallback={<div style={{width: '1200px', margin: '20px auto'}}><Spinner/></div>}>\r\n                    <Route path=\"/\" exact component={ChannelTopics} />\r\n                    <Route path=\"/:thid\" exact component={ChannelsList} />\r\n                    <Route path=\"/:thid/:xvid\" exact component={ChannelListItem} />\r\n                </Suspense>\r\n                <Route component={() => <h1>Page Not Found</h1>} />\r\n            </Switch>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import App from './app';\r\nexport default App;","import {CHANNELS_FETCH_DATA_SUCCESS} from '../actions/action-types';\r\n\r\nconst initialState = {\r\n    channelList: [],\r\n    loading: true\r\n}\r\n\r\nexport default function channelsTopicsReducer(state = initialState, action) {\r\n    switch(action.type) {\r\n        case CHANNELS_FETCH_DATA_SUCCESS:\r\n            return {...state, channelList: action.payload, loading: false}\r\n        default:\r\n            return state;\r\n    }\r\n}","import {CHANNELS_LIST_FETCH_DATA_SUCCESS} from '../actions/action-types';\r\n\r\nconst initialState = {\r\n    channelList: [],\r\n    loading: true\r\n}\r\n\r\nexport default function channelsListReducer(state = initialState, action) {\r\n    switch(action.type) {\r\n        case CHANNELS_LIST_FETCH_DATA_SUCCESS:\r\n            return {...state, channelList: action.payload, loading: false}\r\n        default:\r\n            return state;\r\n    }\r\n}","import {CHANNELS_LIST_ITEM_FETCH_DATA_SUCCESS} from '../actions/action-types';\r\n\r\nconst initialState = {\r\n    channelListItem: [],\r\n    loading: true\r\n}\r\n\r\nexport default function channelsListItemReducer(state = initialState, action) {\r\n    switch(action.type) {\r\n        case CHANNELS_LIST_ITEM_FETCH_DATA_SUCCESS:\r\n            return {...state, channelListItem: action.payload, loading: false}\r\n        default:\r\n            return state;\r\n    }\r\n}","import {combineReducers} from 'redux';\r\nimport channelTopics from './channelTopicsReducer';\r\nimport channelsList from './channelsList';\r\nimport channelListItem from './channelListItem';\r\n\r\nconst rootReducer = combineReducers({\r\n    channelTopics,\r\n    channelsList,\r\n    channelListItem\r\n})\r\n\r\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\nimport {applyMiddleware, createStore} from 'redux';\nimport {Provider} from 'react-redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './store/reducers/rootReducer';\nimport {BrowserRouter} from 'react-router-dom';\n\nconst store = createStore(rootReducer, applyMiddleware(thunk))\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>, document.getElementById('root'));"],"sourceRoot":""}